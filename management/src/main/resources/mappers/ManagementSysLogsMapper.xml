<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lettuce.management.dao.ManagementSysLogsDao">
    <resultMap id="SystemLogsResultMap" type="com.lettuce.management.entity.SysLogs">
        <id column="tid" property="tid"/>
        <result column="module" property="module"/>
        <result column="remark" property="remark"/>
        <result column="flag" property="flag"/>
        <result column="createTime" property="createTime"/>
        <association property="user" javaType="com.lettuce.management.entity.User">
            <result property="userId" column="userId"/>
            <result property="username" column="username"/>
            <result property="nickName" column="nickName"/>
        </association>
    </resultMap>
    <sql id="where">
        <where>
            <if test="params.flag != null and params.flag != ''">
                and ml.flag = #{params.flag}
            </if>
            <if test="params.nickName != null and params.nickName != ''">
                and mu.nickName like concat('%', #{params.nickName}, '%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''">
                and ml.createTime &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''">
                and ml.createTime &lt;= #{params.endTime}
            </if>
        </where>
    </sql>
    <sql id="System_Logs_List">
        tid, userId, module, flag, remark, createTime
    </sql>
    <insert id="save">
        insert into management_logs
        (userId, module, flag, remark, createTime)
        values
        (#{user.id}, #{module}, #{flag}, #{remark}, now())
    </insert>
    <select id="count" resultType="int">
        select count(1) from management_logs ml left join management_user mu on ml.userId = mu.userId
        <include refid="where"/>
    </select>
    <select id="list" resultMap="SystemLogsResultMap">
        select ml.*, mu.username, mu.nickName from management_logs ml left join management_user mu on ml.userId =
        mu.userId
        <include refid="where"/>
        ${params.orderBy}
        limit #{offset}, #{limit}
    </select>
    <delete id="deleteLogs">
        delete from management_logs
        where 1=1
        <if test="time != null and time != ''">
            and createTime &lt;= #{time}
        </if>
    </delete>
</mapper>